#! /usr/bin/env python3

####################################################################################################
#
# Climbing Asso Portal - A Portal for Climbing Club (Association)
# Copyright (C) 2018 Fabrice Salvaire
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
####################################################################################################

####################################################################################################

from ClimbingAssoPortalSite.SettingsTools import setup_django
setup_django()

from django.core import serializers
if 'geojson_ext' not in serializers.BUILTIN_SERIALIZERS:
    serializers.BUILTIN_SERIALIZERS['geojson_ext'] = 'ClimbingAssoPortal.serializers.geojson_ext'

####################################################################################################

# from geojson import Feature, Point, FeatureCollection

from django.core.serializers import serialize
from django.db.models import Count

from ClimbingAssoPortal.models import Member, FrenchCity

####################################################################################################

query = FrenchCity.objects.annotate(member_count=Count('member')).filter(member_count__gt=0).order_by('zip_code')

# print(query.query)

# for row in query:
#     print(row.name, '|', row.member_count)

####################################################################################################

# json_data = GeoJSONSerializer().serialize(
json_data = serialize(
    'geojson_ext',
    query,
    # fields=('name', 'zip_code', 'libelle', 'ligne_5', 'member_count',),
    fields=('as_address', 'member_count',),
    geometry_field='coordinate',
)

print(json_data)
