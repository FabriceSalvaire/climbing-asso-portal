#! /usr/bin/env python3

####################################################################################################
#
# French Zip Code
# Copyright (C) 2018 Fabrice Salvaire
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
####################################################################################################

####################################################################################################

import argparse
import json

from FrenchZipCode import FrenchZipCodeDataBase

####################################################################################################

parser = argparse.ArgumentParser(description='La Poste CSV to JSON')
parser.add_argument(
    'csv_file', metavar='FILE.csv',
    help='CSV file',
)
parser.add_argument(
    'update_csv_file', metavar='UpdateFILE.csv',
    help='CSV update file',
)
parser.add_argument(
    'json_file', metavar='FILE.json',
    help='JSON file',
)
parser.add_argument(
    '--indent',
    action='store_true',
    help='indent JSON file',
)
parser.add_argument(
    '--coordinate',
    action='store_true',
    help='add coordinate to JSON file',
)

args = parser.parse_args()

####################################################################################################

# City names are not unique
#
#   AIGREMONT 30350
#   AIGREMONT 52400
#   AIGREMONT 78240

# Some cities have ligne_5 or several zip codes
#
# 01247 | MIJOUX | 01170 | MIJOUX |  | 46.3286268081, 6.03059799732
# 01247 | MIJOUX | 01410 | MIJOUX |  | 46.2796643227, 5.91198359476

####################################################################################################

zip_code_database = FrenchZipCodeDataBase()

with open(args.csv_file) as fh:
    for line in fh.readlines()[1:]:
        columns = line.strip().split(';')
        insee_code, name, zip_code, libelle_acheminement, ligne_5, coordinate = columns
        zip_codes = int(zip_code)
        if coordinate and isinstance(coordinate, str):
            coordinate = [float(x) for x in coordinate.split(',')]
        else:
            coordinate = None
        # if name != libelle_acheminement:
        # print(' | '.join((insee_code, name, zip_code, libelle_acheminement, ligne_5, coordinate)))
        zip_code_database.make_city(insee_code, name, zip_code, libelle_acheminement, ligne_5)

with open(args.update_csv_file) as fh:
    #  0 Prise en compte
    #  1 Code INSEE Commune Nouvelle
    #  2 Nom Commune Déléguée
    #  3 Adresse 2015 - Code INSEE
    #  4 Adresse 2015 - Libellé Acheminement
    #  5 Nom Commune Nouvelle Siège
    #  6 Code INSEE Commune Déléguée (non actif)
    #  7 Adresse 2017 - Code INSEE
    #  8 Adresse 2017 - L6 Code Postal
    #  9 Adresse 2017 - L6 Libellé Acheminement
    # 10 Adresse 2017 - Ligne 5 Commune déléguée
    # 11 Adresse 2017 - Code INSEE associé à la L5
    # 12 Adresse 2015 - L6 Code Postal
    # 13 Adresse 2015 - L5
    # 15 Adresse 2015 - Code INSEE Associé à la L5
    for line in fh.readlines()[1:]:
        columns = line.strip().split(';')
        zip_code = columns[8]
        libelle_acheminement = columns[9]
        # print('Update', zip_code, libelle_acheminement)
        zip_codes = [int(zip_code)]
        # zip_code_database.make_city(libelle_acheminement, None, zip_codes)

with open(args.json_file, 'w') as fh:
   json_data = zip_code_database.to_json()
   indent = 4 if args.indent else None
   json.dump(json_data, fh, indent=indent)
